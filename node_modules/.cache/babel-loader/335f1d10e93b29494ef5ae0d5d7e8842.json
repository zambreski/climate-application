{"ast":null,"code":"var _jsxFileName = \"/Users/sriegodedios/Development/climate-application/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport loader from './loader.gif';\nimport './bootstrap.min.css';\nimport './weather.css';\nimport './weather0.css'; //import './App.css';\n\nimport Button from '@material-ui/core/Button';\nimport { Card } from '@material-ui/core';\nimport { Container } from '@material-ui/core';\nimport { height } from '@material-ui/system';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport kansas from \"./Kansas.svg\";\nimport * as ButtonStrap from 'react-bootstrap/Button';\nimport * as CardGroupStrap from 'react-bootstrap/CardGroup';\nimport * as CardStrap from 'react-bootstrap/Card';\nimport * as RowStrap from 'react-bootstrap/Row';\nimport * as ColStrap from 'react-bootstrap/Col';\nimport { thisExpression } from '@babel/types';\nimport CurrentWeather from './CurrentWeather';\nimport KansasMap from './KansasMap';\nimport SelectedDistrictCard from './SelectedDistrictCard';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDistrict: null\n    };\n    this.selectDistrict = this.selectDistrict.bind(this);\n  }\n\n  selectDistrict(district) {\n    this.setState({\n      selectedDistrict: district\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Banner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      xs: 12,\n      md: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(KansasMap, {\n      selectedDistrict: this.state.selectedDistrict,\n      onSelect: this.selectDistrict,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      xs: 12,\n      md: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(SelectedDistrictCard, {\n      selectedDistrict: this.state.selectedDistrict,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n/**\n * This function adds the k-state banner to the page.\n */\n\n\nfunction Banner() {\n  return React.createElement(\"div\", {\n    name: \"banner\",\n    style: {\n      backgroundColor: \"#512888\",\n      height: 83,\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"watermark-seal\",\n    style: {\n      background: \"url(https://www.k-state.edu/ksu-resources/branding/4/images/header-masthead-seal.png) 221px no-repeat\",\n      height: 83\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://k-state.edu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    style: {\n      height: 70,\n      marginLeft: 10,\n      marginTop: 5\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 446.41 104.29\",\n    fill: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    d: \"M0 64.55h443.6v2.51H0zM304.19 30.59A22.17 22.17 0 0 0 298.5 25a41.08 41.08 0 0 0-7.18-3.92C288.83 20 286.5 19 284.39 18a22 22 0 0 1-5.12-3.26  4.66 4.66 0 0 1-1.76-3.74 5.08 5.08 0 0 1 1.91-4.38 8.3 8.3 0 0 1 5.07-1.54 13.3 13.3 0 0 1 4.92 1A17.62 17.62 0 0 1 294 8.71a19.8 19.8 0 0 1 3.7 4 15.27  5.27 0 0 1 2.3 4.82l.24.87h3.69l-.33-16.14h-3.9a14.41 14.41 0 0 1-2.91-.26c-1.09-.23-2.27-.49-3.51-.79s-2.64-.62-4.08-.86a29.36 29.36 0 0 0-4.56-.35C278.58 0 274 1.16 270.9  3.44s-4.77 6.13-4.77 11.23a12 12 0 0 0 2.43 7.58 22.27 22.27 0 0 0 5.77 5.1 50.93 50.93 0 0 0 7.26 3.7c2.5 1 4.86 2.13 7 3.24a22.8 22.8 0 0 1 5.2 3.58 5.67 5.67 0 0 1 1.83 4.32 6.62 6.62  0 0 1-.66 3.18 4.75 4.75 0 0 1-1.83 1.89 9.7 9.7 0 0 1-3.12 1.1 24.57 24.57 0 0 1-4.31.35 13.27 13.27 0 0 1-5.34-1.18 21 21 0 0 1-5.18-3.25 24.09 24.09 0 0 1-4.18-4.64 18.13 18.13 0 0 1-2.55-5.17l-.25-.84h-4l3.55  20.13 1.42-.72a3.4 3.4 0 0 1 .63-.22l1.07-.3c.36-.1.7-.18 1-.25a2.35 2.35 0 0 1 .53-.09 20.4 20.4 0 0 1 3.56.32c1.25.23 2.48.48 3.68.75s2.56.54 3.78.76a22.4 22.4 0 0 0 4 .36 26.48 26.48 0 0 0 7.74-1.07 18.23 18.23  0 0 0 6-3.07 13.85 13.85 0 0 0 3.95-4.89 14.47 14.47 0 0 0 1.4-6.39 14.38 14.38 0 0 0-2.32-8.36zM47.91 43.24c-.42-.56-.85-1.14-1.28-1.76l-4.16-6-10.36-14.82 1.2-1c1.3-1.1 2.52-2.23 3.7-3.32s2.2-2 3.16-2.83l.36-.31a55.3 55.3  0 0 1 5.76-4.31l.43-.28a19 19 0 0 1 4.63-2.5 2.64 2.64 0 0 1 .46-.11h.14l.19-.06a10.07 10.07 0 0 1 1.7-.23V1h-23.3v4.66h.32a7 7 0 0 1 1.23.22h.14l.3.09.29.08h.23l.39.16h.08a3.7 3.7 0 0 1 .55.31h.07c.13.12.55.46 0 1.65a6.19 6.19  0 0 1-.77 1.33c-.41.56-.92 1.2-1.51 1.9a45.73 45.73 0 0 1-3.58 3.84l-.4.37-1.15 1.1c-1.49 1.39-2.83 2.61-4.09 3.75s-2.2 2-3.16 2.79l-.18.16V11.87a7.3 7.3 0 0 1 1.5-5c1.46-1.65 3.85-1.8 5-1.8h.71V1H0v4.23h1.38A5.52 5.52 0 0 1 5.54 7.1c.08.09.15.19.22.28v.06l.24.29a5.47  5.47 0 0 1 .9 2.62 3.49 3.49 0 0 1 0 .44V35c0 2.09.13 8.06-.06 10 0 .16 0 .29-.06.38a4.52 4.52 0 0 1-.22.74 4.54 4.54 0 0 1-2.22 2.46 4 4 0 0 1-.78.25 8.16 8.16 0 0 1-1.56.24H0v4.1h26.41v-4.04l-.66-.06h-.44a13.34 13.34 0 0 1-1.58-.17 6.31 6.31 0 0 1-2.58-.9 3.09 3.09  0 0 1-.79-.65 3 3 0 0 1-.25-.34q-.08-.13-.15-.3a3.83 3.83 0 0 1-.32-1.07c-.08-.48-.13-1-.17-1.59-.08-1.26 0-2.39 0-2.39V30.79h.09L23.07 28c1.44 1.91 3.22 4.41 5 6.93l1.63 2.35c1.08 1.58 2.08 3.07 3 4.43s1.48 2.33 2 3.28c.47.77 1.4 2.08.63 3S31 49.32 30.2 49.32v3.9h26.24V49.8c-4.22-.55-6.32-3.49-8.53-6.56zM98 49.34a6.06 6.06  0 0 1-2.65-.63A3 3 0 0 1 93.78 47L81.94 14.83 73 17.47l1.28 3.39-9.64 22.47a25.33 25.33 0 0 1-1.4 3.12v.1a8.91 8.91 0 0 1-.48.8 4.3 4.3 0 0 1-.71.94 2.57 2.57 0 0 1-.63.51l-.11.06a4.2 4.2 0 0 1-1.37.53 2.6 2.6 0 0 1-.59.08h-.5v3.74h13.64v-3.69a7 7  0 0 1-3.09-1c-1.09-.68-.34-2.36-.22-2.61v-.11l1.89-5.13h10.4l1.28 3.63v.12c.07.17.33.81.56 1.52l.09.31v.05c0 .05.09.29.12.44a4.08 4.08 0 0 1 .15.9.9.9 0 0 1-.08.4.6.6 0 0 1-.14.21 2.58 2.58 0 0 1-1.21.75l-.3.09a10.92 10.92 0 0 1-2.64.3v3.81h18.99v-3.86zM72.79 36.15l3.62-9.83 3.48  9.83zM213.48 49.34a6.06 6.06 0 0 1-2.65-.63 3 3 0 0 1-1.56-1.71l-11.84-32.17-8.94 2.64 1.27 3.39-9.63 22.47a27.21 27.21 0 0 1-1.4 3.12.47.47 0 0 1 0 .1 7 7 0 0 1-.47.8 4.3 4.3 0 0 1-.71.94 2.57 2.57 0 0 1-.63.51l-.11.06a4.39 4.39 0 0 1-1.37.53 2.61 2.61 0 0 1-.6.08h-.49v3.74H188v-3.69a7 7  0 0 1-3.09-1c-1.09-.68-.34-2.36-.22-2.61v-.11l1.89-5.13H197l1.28 3.63.05.12c.07.17.33.81.56 1.52l.09.31v.05l.12.44a4.08 4.08 0 0 1 .15.9.9.9 0 0 1-.08.4.6.6 0 0 1-.14.21 2.57 2.57 0 0 1-1.22.75l-.29.09a11 11 0 0 1-2.65.3v3.81h18.89v-3.86zm-25.2-13.19l3.62-9.83 3.48 9.83zM127.5 16.2v3.65c1.16.17 3.37.47 4.09 1.27s1  2 1.35 5.8c.15 1.76.24 4 .3 6.06v.4c.05 1.81.08 3.57.08 5.25v.58c-2.53-3.15-7.17-8.71-11.34-13.72-3.21-3.84-6-7.16-7.31-8.81l-.4-.5h-13.45v3.57a14.33 14.33 0 0 1 6.24 2.92v7.47c0 2.77-.08 7.85-.11 10.78v2.88a15 15 0 0 1-.18 2.33l-.09.38v.1a2.93 2.93 0 0 1-1 1.57c-1.33 1.07-3.46 1.12-4.82 1.33v3.69h16.74v-3.66l-1-.15h-.12c-.37-.06-.65-.12-.89-.18a8.31  8.31 0 0 1-1.58-.51c-1.08-.49-1.86-.74-2.11-2.93v-.7-.37-.14V44.08a2.81 2.81 0 0 1 0-.29v-.2-.51-.54V42v-1.35-13.13l.11.14c4.14 4.91 10.4 13 10.4 13l10.3 12.88.21.26h5V28.56v-2.43c0-.41 0-.8.06-1.15v-.08a.15.15 0 0 1 0-.07v-.07c0-.28 0-.54.07-.79a5.88 5.88 0 0 1 .13-.89c0-.13 0-.27.07-.4a3.37 3.37 0 0 1 .12-.48v-.05a3.05 3.05 0 0 1 2.11-1.93h.53-.01.22c.61-.05  1.3-.07 1.51-.08v-3.96zM172.62 36.71a15.8 15.8 0 0 0-4.08-4 29.77 29.77 0 0 0-5.09-2.78c-1.72-.73-3.34-1.45-4.81-2.16a15.26 15.26 0 0 1-3.46-2.19 2.84 2.84 0 0 1-1.06-2.24 3 3 0 0 1 1.14-2.67 5.31 5.31 0 0 1 3.25-1 8.67 8.67 0 0 1 3.25.64 12 12 0 0 1 3.06 1.8 13.24 13.24 0 0 1 2.49 2.68 10.32 10.32 0 0 1 1.52 3.21l.26.95h3.42l-.24-12.18h-3.2a9.49 9.49  0 0 1-1.89-.21c-.76-.15-1.58-.34-2.43-.54s-1.88-.41-2.88-.57a20.28 20.28 0 0 0-3.25-.25c-4.33 0-7.65.83-9.86 2.48s-3.51 4.5-3.51 8.2a8.76 8.76 0 0 0 1.8 5.58 15.62 15.62 0 0 0 4.14 3.66 34.62 34.62 0 0 0 5.12 2.61c1.73.72 3.36 1.48 4.84 2.25a15.39 15.39 0 0 1 3.52 2.41 3.48 3.48 0 0 1 1.12 2.67 4.16 4.16 0 0 1-.4 2 2.78 2.78 0 0 1-1.1 1.13 6.15 6.15 0 0 1-2 .71 16.11 16.11  0 0 1-2.92.24 8.89 8.89 0 0 1-3.53-.78 14.09 14.09 0 0 1-3.49-2.19 16.72 16.72 0 0 1-2.87-3.17 12.46 12.46 0 0 1-1.72-3.47l-.27-.91h-3.69l2.69 15.2 1.57-.79a1.12 1.12 0 0 1 .35-.12l.74-.21.69-.17a1.23 1.23 0 0 1 .26 0 12.91 12.91 0 0 1 2.4.22c.86.15 1.72.32 2.55.51s1.76.38 2.66.54a16.06 16.06 0 0 0 2.85.25 18.91 18.91 0 0 0 5.53-.76 13.37 13.37 0 0 0 4.36-2.29 10.27 10.27  0 0 0 2.88-3.57 10.54 10.54 0 0 0 1-4.66 10.43 10.43 0 0 0-1.71-6.06zM243.48 36.71a15.84 15.84 0 0 0-4.09-4 29 29 0 0 0-5.08-2.78c-1.72-.73-3.34-1.45-4.81-2.16a14.82 14.82 0 0 1-3.5-2.22 2.81 2.81 0 0 1-1-2.24 3.05 3.05 0 0 1 1.13-2.67 5.34 5.34 0 0 1 3.26-1 8.71 8.71 0 0 1 3.25.64 11.9 11.9 0 0 1 3 1.8 13 13 0 0 1 2.49 2.68 10.32 10.32 0 0 1 1.55 3.24l.26.95h3.43l-.25-12.18h-3.19a9.51 9.51  0 0 1-1.9-.21c-.76-.15-1.58-.34-2.43-.54s-1.87-.41-2.88-.57a20.28 20.28 0 0 0-3.25-.25c-4.33 0-7.64.83-9.86 2.48s-3.51 4.5-3.51 8.2a8.82 8.82 0 0 0 1.8 5.58 16 16 0 0 0 4.1 3.66 35.12 35.12 0 0 0 5.12 2.61c1.73.72 3.36 1.47 4.85 2.25a15.54 15.54 0 0 1 3.51 2.41 3.45 3.45 0 0 1 1.12 2.67 4.29 4.29 0 0 1-.39 2 2.85 2.85 0 0 1-1.1 1.13 6.13 6.13 0 0 1-2 .71 16.07 16.07 0 0 1-2.91.24 8.9 8.9  0 0 1-3.54-.78 14.39 14.39 0 0 1-3.49-2.19 16.72 16.72 0 0 1-2.84-3.17 12.16 12.16 0 0 1-1.71-3.47l-.27-.91h-3.7l2.69 15.2 1.58-.79a1 1 0 0 1 .34-.12l.74-.21.7-.17a1.23 1.23 0 0 1 .26 0 13 13 0 0 1 2.4.22c.86.15 1.72.33 2.55.51s1.75.38 2.65.54a16.23 16.23 0 0 0 2.85.25 18.86 18.86 0 0 0 5.53-.76A13.18 13.18 0 0 0 241.3 51a10.27 10.27 0 0 0 2.88-3.57 10.54 10.54 0 0 0 1-4.66 10.5 10.5  0 0 0-1.7-6.06zM408.86 15.92H376l-.66 13.57h3.81l.2-1a14.38 14.38 0 0 1 1.41-4.26 5.88 5.88 0 0 1 2-2.15 6.88 6.88 0 0 1 2.75-1 17.32 17.32 0 0 1 2.35-.23v23.8a20.2 20.2 0 0 1-.15 2.74 2.26 2.26 0 0 1-.44 1.16 2.19 2.19 0 0 1-1.09.59 16.73 16.73 0 0 1-2.92.43l-1.29.1v3.53h21.17v-3.54l-1.29-.1a16.44 16.44 0 0 1-2.91-.43 2.26 2.26 0 0 1-1.1-.58 2.33 2.33 0 0 1-.44-1.17 22 22 0 0 1-.14-2.74v-23.8a17.65 17.65  0 0 1 2.35.23 6.93 6.93 0 0 1 2.75 1 6 6 0 0 1 2 2.15 14.4 14.4 0 0 1 1.4 4.26l.21 1h3.6zM378.58 49.35a6.06 6.06 0 0 1-2.65-.63 3 3 0 0 1-1.55-1.72l-11.85-32.16-8.93 2.64 1.27 3.39-9.64 22.47a25.33 25.33 0 0 1-1.4 3.12v.1c-.15.28-.31.55-.47.79a4.19 4.19 0 0 1-.72.94 2.41 2.41 0 0 1-.63.52l-.11.06a4.2 4.2 0 0 1-1.37.53 2.6 2.6 0 0 1-.59.08h-.5v3.74h13.68v-3.69a6.9 6.9 0 0 1-3.08-1c-1.1-.69-.35-2.36-.23-2.61l.05-.11 1.88-5.13h10.4l1.29 3.63v.12c.07.17.33.81.56 1.53a2.47 2.47 0 0 0 .1.29v.06c0 .06.09.29.12.44a3.46 3.46 0 0 1 .15.9.92.92 0 0 1-.08.4.7.7 0 0 1-.14.21 2.58 2.58 0 0 1-1.21.75l-.3.09a10.92 10.92 0 0 1-2.64.3v3.76h18.88v-3.81zm-25.19-13.19l3.61-9.83 3.48 9.83zM341.72 15.92h-32.83l-.66 13.57H312l.2-1a14.38 14.38 0 0 1 1.41-4.26 5.79 5.79 0 0 1 2-2.15 6.88 6.88 0 0 1 2.75-1 17.32 17.32 0 0 1 2.35-.23v23.8a20 20 0 0 1-.15 2.74 2.26 2.26 0 0 1-.44 1.16 2.19 2.19 0 0 1-1.09.59 16.73 16.73 0 0 1-2.92.43l-1.29.1v3.53H336v-3.54l-1.29-.1a16.73 16.73 0 0 1-2.92-.43 2.19 2.19 0 0 1-1.09-.59 2.26 2.26 0 0 1-.44-1.16 20.25 20.25 0 0 1-.14-2.74v-23.8a17.16 17.16 0 0 1 2.34.23 6.92 6.92 0 0 1 2.76 1 6 6 0 0 1 2 2.15 14.7 14.7 0 0 1 1.4 4.26l.21 1h3.59zM443.34 39.54v.05c-.57 1.55-2.28 5.29-4.64 6.65-2.81 1.62-6.16 2.95-12.81 2.15V36.28h1.07a6.73 6.73 0 0 1 6.68 5.89H437V26.6h-3.44a6.72 6.72 0 0 1-5.34 5.4 4.61 4.61 0 0 1-.69.12H425.87V20.5h3.92c1 0 4.59-.1 7 1.52 2.75 1.87 3.58 5.26 3.84 6.7l3.48-.63-.51-12.17h-32.8v4l1.2.08a8.27 8.27 0 0 1 2.46.36 2.5 2.5 0 0 1 1.09.72 2.78 2.78 0 0 1 .5 1.26 14.83 14.83 0 0 1 .16 2.36v20a15.62 15.62 0 0 1-.16 2.47 2.49 2.49 0 0 1-.49 1.21 2.12 2.12 0 0 1-1.05.64 10.46 10.46 0 0 1-2.55.39l-1.21.07v3.79h32.8l2.82-11.54zM21.16 98.05c-2.09 5.85-8.68 6.24-10.1 6.24-1.1 0-5.28-.18-8.12-3C.53 98.87.46 95.78.46 92.66v-14h6.31v15.63c0 2.24.18 3.09 1.17 3.87a5.6 5.6 0 0 0 3.33 1 4.35 4.35 0 0 0 3.09-.93c1.17-1 1.2-2.51 1.2-3.93V78.7h6.28v14a16.23 16.23 0 0 1-.68 5.35zM67.07 103.72L58 88.23l.22 15.49h-6v-25h6.13l9.15 15.7-.25-15.7h6v25zM103.72 103.72v-25H110v25zM153.07 103.72h-6.38l-8.58-25h6.66L150 96.49l5.14-17.79h6.66zM189.9 103.72v-25h18.5v4.82h-12.26v4.57h11.45v4.75h-11.45v6h13.4v4.92zM253.67 103.72l-5-8.93h-3.89v8.93h-6.31v-25h13.39c1.14.07 5.11.32 7.06 3.9a9.06 9.06 0 0 1 1 4.18 6.6 6.6 0 0 1-3.12 6 15.37 15.37 0 0 1-2 .89l5.78 10zm-3.61-20.38h-5.32v6.81h5.17a5.09 5.09 0 0 0 1.67-.25 3.14 3.14 0 0 0 2.09-3.23c0-3.26-2.51-3.33-3.61-3.33zM309 99.5c-2.16 3.94-6.67 4.47-7.87 4.61a19 19 0 0 1-2.52.18 14.2 14.2 0 0 1-9.43-3 14.91 14.91 0 0 1-2-2.09l4.75-3a9.69 9.69 0 0 0 1.1 1.06 10.07 10.07 0 0 0 6.13 2.09 7.16 7.16 0 0 0 1.95-.24c.18 0 2.66-.75 2.66-2.66 0-2.31-3.33-2.38-5.57-2.7a31.29 31.29 0 0 1-3.54-.63A8.55 8.55 0 0 1 290 90.5a5.79 5.79 0 0 1-1.06-1.84 7.68 7.68 0 0 1-.32-2.2 16.25 16.25 0 0 1 .14-1.74 6.91 6.91 0 0 1 2.17-4c1.24-1.17 3.68-2.63 7.79-2.63a14.5 14.5 0 0 1 8.28 2.49 23.68 23.68 0 0 1 2.77 2.23l-4.61 3.29a9.58 9.58 0 0 0-4.22-2.72 9.78 9.78 0 0 0-2.34-.36c-2.55 0-3.72 1.49-3.72 2.66a1.87 1.87 0 0 0 .53 1.31c.85.92 2.23.89 4.57 1.24 1.42.22 2.8.5 4.19.82.88.18 4.11.81 5.38 3.86a7.43 7.43 0 0 1 .5 2.7A8 8 0 0 1 309 99.5zM339.35 103.72v-25h6.24v25zM386.86 83.63v20.09h-6.31V83.63H374V78.7h19.32v4.93zM435 91.88v11.84h-6.17V92.06l-9.36-13.36h7.16l5.37 8.47 5.35-8.47h7.12z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })))));\n}\n\nfunction District(props) {\n  return React.createElement(\"button\", {\n    className: \"district\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, props.value);\n}\n/***\n * This class controls everything with the functionality\n * \n */\n\n\nclass MasterClassWeatherComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = \"\";\n    this.grainDistricts = [\"District1\", \"District2\", \"District3\", \"Distrinct4\", \"District5\", \"District6\", \"District7\", \"District8\", \"District9\"];\n  }\n\n}\n\nclass MapOfKansasClass extends React.Component {\n  renderDistrict(i) {\n    return React.createElement(District, {\n      value: this.props.grainDistricts[i],\n      onClick: () => this.props.onClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return \"\";\n    /*\n    return (\n      <!svg id=\"Kansas\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"5950\" height=\"4250\" viewBox=\"0 0 5950 4250\"></svg>\n      <g id=\"District9\">\n        {this.renderDistrict(0)}\n        <image id=\"Border\" x=\"3745\" y=\"2375\" width=\"1670\" height=\"943\" xlink:href=\"data:img/png;base64,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\"/>\n        <image id=\"Station\" x=\"4972\" y=\"3011\" width=\"43\" height=\"44\" xlink:href=\"data:img/png;base64,iVBORw0KGgoAAAANSUhEUgAAACsAAAAsCAYAAAD8WEF4AAADsUlEQVRYhc2ZyY8MYRiHn6puYywzY401iEE42GJNiJvg5CTEwcnBwT/jJBws4eREEA4ilthjgljGLkQYjN0w09PV8o7fN/nU9Cw13T1dv6TSqa6emqfe7/3erQLKJ3evECjowPssWaXA2t9mgVpgNFCvz5G61gn8Bn4C34BfQLu+H/Q/TKqMoCYD84EFwBxgooBrdN8I6BDoe+AJ8Ah4DHzQg0SVgjXIOsGtBVYDs4HxwBhZOKN7Bp4rOAt/AT4CT4ErwFXgmSw+IFcZKOwIoBHYAGySJScJMIkKAn8LNAOngHPAGyCX8F5FH8asthE4CrzUTQslHrb8f4CHwF5gDTCqFNBQfrlTy/a9DJDxIw98As4CW2SYQVl0CrBbT99ZAVB3OCtfB7YnBQ60aXZp90YVBPWBLXLcALYlcQkLS5uBe0ME6gNbHL4ErAOG9QdqQX4ZcLLCS98XsCWRw8DceLTKxJbfAvsOYOsgwlI55LLiJG28+3KPHhquONpcBYvGDwO8Biz3rRt6xOME21gFi8aVVaZc7282B2sXZ+liNgWwgQoiS0ZTnXUdrKXTJUqjaVFWhdIiZ0AHa9XSiiptqt4UKIyulDG7YEP56+IUgTplxWXVXheoha8JwIxU4P0vY5upjNptWVc4p02u6rOVD5xl6weS3qqgQJ2H8YWh90U5m8dyKdDK1zjLouyRRvmZrbttTty8DaEi8RVCVetfVJ6lTQUV5tYhR6HXWrSm1Kqt4uuybKQW+VkK4OLKa87wFflspJM7qcL8J+ukm4AfeLWBndxUB5sWmRE/A7fcfnKw7arKm1IE2ynQx3KHbthIU5Iz2n3VVkGrfFr7CWKdgl08r3a42upQl3vZD6l+wxhpSIY63LoqAduSvwD2ALf9EWkm9sOcIoMVvUuLXK+03PLvB44rGfQp63JXASeqMORoAw6qnelhqGKWy+uJPqoobxyCisylVbPmPuBBsQl5b8uc03T6HdCgzrdSLlHQFOa4xp9NvdUpfQHYjmwBXsnaUyuw6fKa+drs9wBwVxVWUfVnrQ69D3iugqJWo51SZwuRsuZF4BBwTMG/z8pvIEvbqbT3XC8xWuXDDdqMSSE/K5Yb4BHggtyt37c4STZOIMtO9oYPC4F56ozrBR9/D/ZbgK/1sPe03E+0iXPeb8sG6xSquazXdHw6ME0d8lg9kKuT21TYtyidv5Vb/UwCWQqsr4z8t0aQtTp3pacBWUiyw/zflnrQ7VO542ex+5WnGQX+Ap/+rrU2nUxqAAAAAElFTkSuQmCC\"/>\n      </g>\n    );\n    */\n  }\n\n}\n\nclass CurrentDataComponent extends React.Component {}\n\nclass HistoricalDataComponent extends React.Component {}\n\nfunction Main() {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(CardUIMap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(CardUI, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(CardUI, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }))));\n}\n\nfunction CardUIMap() {\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    xs: 12,\n    md: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(MapKansas, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    xs: 12,\n    md: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    xs: 12,\n    style: {\n      marginBottom: \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(CurrentWeatherCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Test\")), React.createElement(Grid, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(CardStrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(CardStrap.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"Forcast\"), React.createElement(CardStrap.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"This is a test.\"))))))), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"Share\"), React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, \"Learn More\")));\n}\n\nfunction CurrentWeatherCard() {\n  return React.createElement(CardStrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(CardStrap.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(CurrentWeatherComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  })));\n}\n\nfunction CardUI() {\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \"This is a test\")), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, React.createElement(ButtonStrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"Stop\"), React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, \"Share\"), React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, \"Learn More\")));\n}\n\nfunction getLocation() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(showPosition);\n  } else {\n    alert(\"Geolocation is not supported by this browser.\");\n  }\n}\n\nfunction showPosition(position) {\n  alert(\"Latitude: \" + position.coords.latitude + \"<br>Longitude: \" + position.coords.longitude);\n}\n\nfunction MapKansas() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, React.createElement(\"object\", {\n    id: \"svg-object\",\n    data: kansas,\n    className: \"App-logo\",\n    alt: \"logo\",\n    style: {\n      width: \"100%\",\n      height: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  })));\n}\n\nfunction MapOfKansas() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"500.000000pt\",\n    height: \"340.000000pt\",\n    viewBox: \"0 0 300.000000 240.000000\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    transform: \"translate(0.000000,240.000000) scale(0.100000,-0.100000)\",\n    fill: \"#03AB03\",\n    stroke: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    class: \"node\",\n    id: \"node1\",\n    d: \"M140 1200 l0 -710 1358 2 1357 3 0 510 0 510 -32 3 c-33 3 -74 45 -66 67 2 6 -13 26 -32 45 -19 19 -35 40 -35 48 0 27 41 82 61 82 24 0 24 1 -1 56 -20 43 -44 57 -52 32 -5 -15 -68 15 -95 45 -15 16 -87 17 -1240 17 l-1223 0 0 -710z\",\n    transform: \"scale(1) translate(-15,0) rotate(0 218.3666564941406,178)\",\n    style: {\n      position: \"relative\",\n      fill: \"rgb(255, 255, 255)\",\n      stroke: \"rgb(8, 8, 8)\"\n    },\n    fill: \"#ffffff\",\n    stroke: \"#080808\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  })), React.createElement(\"g\", {\n    transform: \"translate(0.000000,240.000000) scale(0.100000,-0.100000)\",\n    fill: \"#FFFFFF\",\n    stroke: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }))));\n}\n\nclass CurrentWeatherComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.date = new Date();\n    this.year = this.date.getFullYear();\n    var month = this.date.getMonth() + 1;\n    this.month = month < 10 ? \"0\" + month : month;\n    var day = this.date.getDay();\n    console.log(day);\n    this.day = day < 10 ? \"0\" + day : day;\n    var hours = this.date.getHours();\n    this.hours = hours < 10 ? \"0\" + hours : hours;\n    var minutes = this.date.getMinutes();\n    this.minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    var seconds = this.date.getSeconds();\n    this.seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    this.dateString = this.year + this.month + this.day + this.hours + this.minutes + this.seconds;\n    console.log(this.year);\n    console.log(this.month);\n    console.log(this.day);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://mesonet.k-state.edu/rest/stationdata/?stn=Manhattan&int=day&t_start=20190917000000&t_end=20190917000000&vars=TEMP2MAVG\").then(res => res.text()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  getDayIndicator(hour, min) {\n    if (hour >= 0 && hour <= 5) {\n      return \"Early Morning\";\n    } else if (hour >= 6 && hour <= 11) {\n      return \"Morning\";\n    } else if (hour >= 12 && hour <= 17) {\n      return \"Afternoon\";\n    } else if (hour >= 18 && hour <= 23) {\n      return \"Night\";\n    }\n  }\n\n  get12HourTimes(h, m) {\n    var hours = h > 12 ? h - 12 : h;\n    var am_pm = h >= 12 ? \"PM\" : \"AM\"; //hours = hours < 10 ? \"0\" + hours : hours;\n\n    var minutes = m < 10 ? \"0\" + m : m;\n    return hours + \":\" + minutes + \" \" + am_pm;\n  }\n\n  getCurrentTemperature(s) {\n    var strArr = s.split('\\n');\n    var tempLine = strArr[1];\n    var tempArr = tempLine.split(',');\n    var tempCels = parseFloat(tempArr[2]);\n    return Math.trunc(tempCels * (9 / 5) + 32);\n  }\n\n  render() {\n    var hour = this.date.getHours();\n    var minutes = this.date.getMinutes();\n    var seconds = this.date.getSeconds();\n    var time = hour + \":\" + minutes;\n    var meridiem = \"\";\n    var descriptionOfDay = this.getDayIndicator(hour, minutes);\n    var twelveHourTime = this.get12HourTimes(hour, minutes);\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: loader,\n        class: \"img-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }));\n    } else {\n      var temperature = this.getCurrentTemperature(items);\n      console.log(items);\n      return React.createElement(\"div\", {\n        class: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, \"City:\"), \" Manhattan\"), React.createElement(\"div\", {\n        class: \"night\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, descriptionOfDay, \" - \", twelveHourTime), React.createElement(\"div\", {\n        class: \"temp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, temperature, \"\\xB0 F\"), React.createElement(\"div\", {\n        class: \"wind\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, React.createElement(\"svg\", {\n        version: \"1.1\",\n        id: \"wind\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        xlinkHref: \"http://www.w3.org/1999/xlink\",\n        x: \"0px\",\n        y: \"0px\",\n        viewBox: \"0 0 300.492 300.492\",\n        style: {\n          background: \"0 0 300.492 300.492\"\n        },\n        space: \"preserve\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, React.createElement(\"g\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(\"g\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, React.createElement(\"g\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, React.createElement(\"path\", {\n        style: {\n          fill: \"#FFFFFF\"\n        },\n        d: \"M287.166,100.421c-9.502-13.217-24.046-23.034-39.868-26.945 c-5.309-1.365-10.845-2.061-16.453-2.061c-11.531,0-22.257,3.035-30.981,8.746c-14.076,8.86-23.709,23.91-25.759,40.157 c-2.698,16.644,4.357,34.315,17.519,43.959c7.555,5.716,17.47,8.991,27.201,8.991c7.332,0,14.109-1.811,19.575-5.216 c14.936-8.991,21.495-28.577,14.626-43.665c-3.525-7.669-10.427-13.647-18.455-15.975c-2.361-0.696-4.754-1.082-7.131-1.164 l-0.288,5.434c1.974,0.141,3.916,0.544,5.782,1.202c6.288,2.143,11.536,7.093,14.044,13.288c1.256,2.975,1.893,6.211,1.822,9.355 c-0.071,3.421-0.658,6.565-1.855,9.861c-2.366,6.222-6.967,11.667-12.678,14.968c-10.269,6.233-26.624,4.329-37.171-4.172 c-10.405-8.278-15.529-21.87-13.364-35.528c1.8-13.413,9.85-25.71,21.56-32.912c5.553-3.514,12.069-5.803,18.868-6.636 c2.823-0.359,6.619-0.413,10.285-0.131c3.497,0.31,7.033,0.903,10.231,1.713c13.358,3.437,25.623,11.863,33.668,23.154 c8.365,11.324,12.325,24.96,11.438,39.477c-0.587,14.098-5.423,28.305-13.619,40.021c-8.159,11.759-19.907,21.354-33.108,27.027 c-6.059,2.654-13.07,4.574-20.832,5.695c-4.803,0.68-9.959,0.8-16.203,0.892l-176.09,2.339l-29.817,1.164l0.109,5.439 l199.015,0.131c2.295,0,4.596,0,6.88,0.022l4.253,0.027c3.835,0,8.376-0.071,12.988-0.593c8.36-1.033,16.263-3.111,23.464-6.168 c14.925-6.206,28.283-16.905,37.606-30.127c9.426-13.206,15.072-29.36,15.893-45.438 C301.476,130.293,296.679,113.399,287.166,100.421z\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      })), React.createElement(\"g\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, React.createElement(\"path\", {\n        style: {\n          fill: \"#FFFFFF\"\n        },\n        d: \"M106.617,209.839c0.664-0.027,1.463-0.038,2.23-0.038l5.445,0.065 c1.528,0.027,2.959,0.049,4.395,0.049c2.801,0,6.511-0.076,10.438-0.647c7.626-1.246,14.849-4.471,20.864-9.312 c12.374-9.752,18.874-25.999,16.562-41.391c-2.371-15.648-15.953-28.697-31.547-30.35c-8.539-1.05-16.421,0.979-22.404,5.619 c-6.451,4.824-10.688,12.091-11.612,19.842c-1.229,8.077,1.806,16.589,7.664,21.637c5.803,5.287,15.431,7.43,22.387,5.037 c5.102-1.702,9.42-5.798,11.563-10.971l-4.928-2.284c-1.817,3.519-5.096,6.124-8.762,6.957c-1.218,0.277-2.317,0.408-3.367,0.408 c-4.329,0-8.762-1.866-11.591-4.89c-3.835-4.003-5.249-9.11-4.096-14.762c1.044-5.08,4.308-10.106,8.496-13.124 c4.449-3.176,9.284-4.286,15.349-3.405c11.123,1.441,20.603,10.943,22.077,22.229c1.996,11.335-2.877,24.013-12.173,31.585 c-4.585,3.867-10.193,6.494-16.236,7.604c-2.469,0.479-4.922,0.571-7.647,0.642l-104.506,2.752 C10.264,203.524,5.134,203.9,0,204.275l0.19,5.434L106.617,209.839z\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }))))), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, \"25 km/h\")));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sriegodedios/Development/climate-application/src/App.js"],"names":["React","loader","Button","Card","Container","height","CardContent","CardActions","CardHeader","Grid","ButtonStrap","CardGroupStrap","CardStrap","RowStrap","ColStrap","thisExpression","CurrentWeather","KansasMap","SelectedDistrictCard","App","Component","constructor","props","state","selectedDistrict","selectDistrict","bind","district","setState","render","Banner","backgroundColor","marginBottom","background","marginLeft","marginTop","District","onClick","value","MasterClassWeatherComponent","grainDistricts","MapOfKansasClass","renderDistrict","i","CurrentDataComponent","HistoricalDataComponent","Main","CardUIMap","CurrentWeatherCard","CardUI","getLocation","navigator","geolocation","getCurrentPosition","showPosition","alert","position","coords","latitude","longitude","MapKansas","kansas","width","MapOfKansas","fill","stroke","CurrentWeatherComponent","date","Date","year","getFullYear","month","getMonth","day","getDay","console","log","hours","getHours","minutes","getMinutes","seconds","getSeconds","dateString","error","isLoaded","items","componentDidMount","fetch","then","res","text","result","getDayIndicator","hour","min","get12HourTimes","h","m","am_pm","getCurrentTemperature","s","strArr","split","tempLine","tempArr","tempCels","parseFloat","Math","trunc","time","meridiem","descriptionOfDay","twelveHourTime","message","temperature"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport loader from './loader.gif';\nimport './bootstrap.min.css'\nimport './weather.css';\nimport './weather0.css';\n//import './App.css';\nimport Button from '@material-ui/core/Button';\nimport { Card } from '@material-ui/core';\nimport { Container } from '@material-ui/core';\nimport { height } from '@material-ui/system';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport kansas from './Kansas.svg';\nimport * as ButtonStrap from 'react-bootstrap/Button';\nimport * as CardGroupStrap from 'react-bootstrap/CardGroup';\nimport * as CardStrap from 'react-bootstrap/Card';\nimport * as RowStrap from 'react-bootstrap/Row';\nimport * as ColStrap from 'react-bootstrap/Col';\nimport { thisExpression } from '@babel/types';\nimport CurrentWeather from './CurrentWeather';\nimport KansasMap from './KansasMap';\nimport SelectedDistrictCard from './SelectedDistrictCard';\n\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDistrict: null\n    }\n    this.selectDistrict = this.selectDistrict.bind(this);\n  }\n\n  selectDistrict(district) {\n    \n    this.setState({selectedDistrict: district});\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Banner>\n        </Banner>\n        <Container>\n\n          <Grid container spacing={3}>\n              <Grid item xs={12} md={12}>\n              <Card>\n                <CardContent>\n                <Grid xs={12} md={7}>\n                <KansasMap selectedDistrict={this.state.selectedDistrict} onSelect={this.selectDistrict}/>\n                </Grid>\n                <Grid xs={12} md={5}>\n                <SelectedDistrictCard selectedDistrict={this.state.selectedDistrict} ></SelectedDistrictCard>\n                </Grid>\n                </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\n/**\n * This function adds the k-state banner to the page.\n */\nfunction Banner()\n{\n  return (\n  <div name=\"banner\" style={{backgroundColor: \"#512888\", height: 83, marginBottom:10 }}>\n    <div id=\"watermark-seal\" style={{background: \"url(https://www.k-state.edu/ksu-resources/branding/4/images/header-masthead-seal.png) 221px no-repeat\", height:83}}>\n      <a href=\"https://k-state.edu\" >\n    <svg style={{height: 70, marginLeft:10, marginTop: 5 }} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 446.41 104.29\" fill=\"#fff\">\n      <path d=\"M0 64.55h443.6v2.51H0zM304.19 30.59A22.17 22.17 0 0 0 298.5 25a41.08 41.08 0 0 0-7.18-3.92C288.83 20 286.5 19 284.39 18a22 22 0 0 1-5.12-3.26 \n      4.66 4.66 0 0 1-1.76-3.74 5.08 5.08 0 0 1 1.91-4.38 8.3 8.3 0 0 1 5.07-1.54 13.3 13.3 0 0 1 4.92 1A17.62 17.62 0 0 1 294 8.71a19.8 19.8 0 0 1 3.7 4 15.27 \n      5.27 0 0 1 2.3 4.82l.24.87h3.69l-.33-16.14h-3.9a14.41 14.41 0 0 1-2.91-.26c-1.09-.23-2.27-.49-3.51-.79s-2.64-.62-4.08-.86a29.36 29.36 0 0 0-4.56-.35C278.58 0 274 1.16 270.9 \n      3.44s-4.77 6.13-4.77 11.23a12 12 0 0 0 2.43 7.58 22.27 22.27 0 0 0 5.77 5.1 50.93 50.93 0 0 0 7.26 3.7c2.5 1 4.86 2.13 7 3.24a22.8 22.8 0 0 1 5.2 3.58 5.67 5.67 0 0 1 1.83 4.32 6.62 6.62 \n      0 0 1-.66 3.18 4.75 4.75 0 0 1-1.83 1.89 9.7 9.7 0 0 1-3.12 1.1 24.57 24.57 0 0 1-4.31.35 13.27 13.27 0 0 1-5.34-1.18 21 21 0 0 1-5.18-3.25 24.09 24.09 0 0 1-4.18-4.64 18.13 18.13 0 0 1-2.55-5.17l-.25-.84h-4l3.55 \n      20.13 1.42-.72a3.4 3.4 0 0 1 .63-.22l1.07-.3c.36-.1.7-.18 1-.25a2.35 2.35 0 0 1 .53-.09 20.4 20.4 0 0 1 3.56.32c1.25.23 2.48.48 3.68.75s2.56.54 3.78.76a22.4 22.4 0 0 0 4 .36 26.48 26.48 0 0 0 7.74-1.07 18.23 18.23 \n      0 0 0 6-3.07 13.85 13.85 0 0 0 3.95-4.89 14.47 14.47 0 0 0 1.4-6.39 14.38 14.38 0 0 0-2.32-8.36zM47.91 43.24c-.42-.56-.85-1.14-1.28-1.76l-4.16-6-10.36-14.82 1.2-1c1.3-1.1 2.52-2.23 3.7-3.32s2.2-2 3.16-2.83l.36-.31a55.3 55.3 \n      0 0 1 5.76-4.31l.43-.28a19 19 0 0 1 4.63-2.5 2.64 2.64 0 0 1 .46-.11h.14l.19-.06a10.07 10.07 0 0 1 1.7-.23V1h-23.3v4.66h.32a7 7 0 0 1 1.23.22h.14l.3.09.29.08h.23l.39.16h.08a3.7 3.7 0 0 1 .55.31h.07c.13.12.55.46 0 1.65a6.19 6.19 \n      0 0 1-.77 1.33c-.41.56-.92 1.2-1.51 1.9a45.73 45.73 0 0 1-3.58 3.84l-.4.37-1.15 1.1c-1.49 1.39-2.83 2.61-4.09 3.75s-2.2 2-3.16 2.79l-.18.16V11.87a7.3 7.3 0 0 1 1.5-5c1.46-1.65 3.85-1.8 5-1.8h.71V1H0v4.23h1.38A5.52 5.52 0 0 1 5.54 7.1c.08.09.15.19.22.28v.06l.24.29a5.47 \n      5.47 0 0 1 .9 2.62 3.49 3.49 0 0 1 0 .44V35c0 2.09.13 8.06-.06 10 0 .16 0 .29-.06.38a4.52 4.52 0 0 1-.22.74 4.54 4.54 0 0 1-2.22 2.46 4 4 0 0 1-.78.25 8.16 8.16 0 0 1-1.56.24H0v4.1h26.41v-4.04l-.66-.06h-.44a13.34 13.34 0 0 1-1.58-.17 6.31 6.31 0 0 1-2.58-.9 3.09 3.09 \n      0 0 1-.79-.65 3 3 0 0 1-.25-.34q-.08-.13-.15-.3a3.83 3.83 0 0 1-.32-1.07c-.08-.48-.13-1-.17-1.59-.08-1.26 0-2.39 0-2.39V30.79h.09L23.07 28c1.44 1.91 3.22 4.41 5 6.93l1.63 2.35c1.08 1.58 2.08 3.07 3 4.43s1.48 2.33 2 3.28c.47.77 1.4 2.08.63 3S31 49.32 30.2 49.32v3.9h26.24V49.8c-4.22-.55-6.32-3.49-8.53-6.56zM98 49.34a6.06 6.06 \n      0 0 1-2.65-.63A3 3 0 0 1 93.78 47L81.94 14.83 73 17.47l1.28 3.39-9.64 22.47a25.33 25.33 0 0 1-1.4 3.12v.1a8.91 8.91 0 0 1-.48.8 4.3 4.3 0 0 1-.71.94 2.57 2.57 0 0 1-.63.51l-.11.06a4.2 4.2 0 0 1-1.37.53 2.6 2.6 0 0 1-.59.08h-.5v3.74h13.64v-3.69a7 7 \n      0 0 1-3.09-1c-1.09-.68-.34-2.36-.22-2.61v-.11l1.89-5.13h10.4l1.28 3.63v.12c.07.17.33.81.56 1.52l.09.31v.05c0 .05.09.29.12.44a4.08 4.08 0 0 1 .15.9.9.9 0 0 1-.08.4.6.6 0 0 1-.14.21 2.58 2.58 0 0 1-1.21.75l-.3.09a10.92 10.92 0 0 1-2.64.3v3.81h18.99v-3.86zM72.79 36.15l3.62-9.83 3.48 \n      9.83zM213.48 49.34a6.06 6.06 0 0 1-2.65-.63 3 3 0 0 1-1.56-1.71l-11.84-32.17-8.94 2.64 1.27 3.39-9.63 22.47a27.21 27.21 0 0 1-1.4 3.12.47.47 0 0 1 0 .1 7 7 0 0 1-.47.8 4.3 4.3 0 0 1-.71.94 2.57 2.57 0 0 1-.63.51l-.11.06a4.39 4.39 0 0 1-1.37.53 2.61 2.61 0 0 1-.6.08h-.49v3.74H188v-3.69a7 7 \n      0 0 1-3.09-1c-1.09-.68-.34-2.36-.22-2.61v-.11l1.89-5.13H197l1.28 3.63.05.12c.07.17.33.81.56 1.52l.09.31v.05l.12.44a4.08 4.08 0 0 1 .15.9.9.9 0 0 1-.08.4.6.6 0 0 1-.14.21 2.57 2.57 0 0 1-1.22.75l-.29.09a11 11 0 0 1-2.65.3v3.81h18.89v-3.86zm-25.2-13.19l3.62-9.83 3.48 9.83zM127.5 16.2v3.65c1.16.17 3.37.47 4.09 1.27s1 \n      2 1.35 5.8c.15 1.76.24 4 .3 6.06v.4c.05 1.81.08 3.57.08 5.25v.58c-2.53-3.15-7.17-8.71-11.34-13.72-3.21-3.84-6-7.16-7.31-8.81l-.4-.5h-13.45v3.57a14.33 14.33 0 0 1 6.24 2.92v7.47c0 2.77-.08 7.85-.11 10.78v2.88a15 15 0 0 1-.18 2.33l-.09.38v.1a2.93 2.93 0 0 1-1 1.57c-1.33 1.07-3.46 1.12-4.82 1.33v3.69h16.74v-3.66l-1-.15h-.12c-.37-.06-.65-.12-.89-.18a8.31 \n      8.31 0 0 1-1.58-.51c-1.08-.49-1.86-.74-2.11-2.93v-.7-.37-.14V44.08a2.81 2.81 0 0 1 0-.29v-.2-.51-.54V42v-1.35-13.13l.11.14c4.14 4.91 10.4 13 10.4 13l10.3 12.88.21.26h5V28.56v-2.43c0-.41 0-.8.06-1.15v-.08a.15.15 0 0 1 0-.07v-.07c0-.28 0-.54.07-.79a5.88 5.88 0 0 1 .13-.89c0-.13 0-.27.07-.4a3.37 3.37 0 0 1 .12-.48v-.05a3.05 3.05 0 0 1 2.11-1.93h.53-.01.22c.61-.05 \n      1.3-.07 1.51-.08v-3.96zM172.62 36.71a15.8 15.8 0 0 0-4.08-4 29.77 29.77 0 0 0-5.09-2.78c-1.72-.73-3.34-1.45-4.81-2.16a15.26 15.26 0 0 1-3.46-2.19 2.84 2.84 0 0 1-1.06-2.24 3 3 0 0 1 1.14-2.67 5.31 5.31 0 0 1 3.25-1 8.67 8.67 0 0 1 3.25.64 12 12 0 0 1 3.06 1.8 13.24 13.24 0 0 1 2.49 2.68 10.32 10.32 0 0 1 1.52 3.21l.26.95h3.42l-.24-12.18h-3.2a9.49 9.49 \n      0 0 1-1.89-.21c-.76-.15-1.58-.34-2.43-.54s-1.88-.41-2.88-.57a20.28 20.28 0 0 0-3.25-.25c-4.33 0-7.65.83-9.86 2.48s-3.51 4.5-3.51 8.2a8.76 8.76 0 0 0 1.8 5.58 15.62 15.62 0 0 0 4.14 3.66 34.62 34.62 0 0 0 5.12 2.61c1.73.72 3.36 1.48 4.84 2.25a15.39 15.39 0 0 1 3.52 2.41 3.48 3.48 0 0 1 1.12 2.67 4.16 4.16 0 0 1-.4 2 2.78 2.78 0 0 1-1.1 1.13 6.15 6.15 0 0 1-2 .71 16.11 16.11 \n      0 0 1-2.92.24 8.89 8.89 0 0 1-3.53-.78 14.09 14.09 0 0 1-3.49-2.19 16.72 16.72 0 0 1-2.87-3.17 12.46 12.46 0 0 1-1.72-3.47l-.27-.91h-3.69l2.69 15.2 1.57-.79a1.12 1.12 0 0 1 .35-.12l.74-.21.69-.17a1.23 1.23 0 0 1 .26 0 12.91 12.91 0 0 1 2.4.22c.86.15 1.72.32 2.55.51s1.76.38 2.66.54a16.06 16.06 0 0 0 2.85.25 18.91 18.91 0 0 0 5.53-.76 13.37 13.37 0 0 0 4.36-2.29 10.27 10.27 \n      0 0 0 2.88-3.57 10.54 10.54 0 0 0 1-4.66 10.43 10.43 0 0 0-1.71-6.06zM243.48 36.71a15.84 15.84 0 0 0-4.09-4 29 29 0 0 0-5.08-2.78c-1.72-.73-3.34-1.45-4.81-2.16a14.82 14.82 0 0 1-3.5-2.22 2.81 2.81 0 0 1-1-2.24 3.05 3.05 0 0 1 1.13-2.67 5.34 5.34 0 0 1 3.26-1 8.71 8.71 0 0 1 3.25.64 11.9 11.9 0 0 1 3 1.8 13 13 0 0 1 2.49 2.68 10.32 10.32 0 0 1 1.55 3.24l.26.95h3.43l-.25-12.18h-3.19a9.51 9.51 \n      0 0 1-1.9-.21c-.76-.15-1.58-.34-2.43-.54s-1.87-.41-2.88-.57a20.28 20.28 0 0 0-3.25-.25c-4.33 0-7.64.83-9.86 2.48s-3.51 4.5-3.51 8.2a8.82 8.82 0 0 0 1.8 5.58 16 16 0 0 0 4.1 3.66 35.12 35.12 0 0 0 5.12 2.61c1.73.72 3.36 1.47 4.85 2.25a15.54 15.54 0 0 1 3.51 2.41 3.45 3.45 0 0 1 1.12 2.67 4.29 4.29 0 0 1-.39 2 2.85 2.85 0 0 1-1.1 1.13 6.13 6.13 0 0 1-2 .71 16.07 16.07 0 0 1-2.91.24 8.9 8.9 \n      0 0 1-3.54-.78 14.39 14.39 0 0 1-3.49-2.19 16.72 16.72 0 0 1-2.84-3.17 12.16 12.16 0 0 1-1.71-3.47l-.27-.91h-3.7l2.69 15.2 1.58-.79a1 1 0 0 1 .34-.12l.74-.21.7-.17a1.23 1.23 0 0 1 .26 0 13 13 0 0 1 2.4.22c.86.15 1.72.33 2.55.51s1.75.38 2.65.54a16.23 16.23 0 0 0 2.85.25 18.86 18.86 0 0 0 5.53-.76A13.18 13.18 0 0 0 241.3 51a10.27 10.27 0 0 0 2.88-3.57 10.54 10.54 0 0 0 1-4.66 10.5 10.5 \n      0 0 0-1.7-6.06zM408.86 15.92H376l-.66 13.57h3.81l.2-1a14.38 14.38 0 0 1 1.41-4.26 5.88 5.88 0 0 1 2-2.15 6.88 6.88 0 0 1 2.75-1 17.32 17.32 0 0 1 2.35-.23v23.8a20.2 20.2 0 0 1-.15 2.74 2.26 2.26 0 0 1-.44 1.16 2.19 2.19 0 0 1-1.09.59 16.73 16.73 0 0 1-2.92.43l-1.29.1v3.53h21.17v-3.54l-1.29-.1a16.44 16.44 0 0 1-2.91-.43 2.26 2.26 0 0 1-1.1-.58 2.33 2.33 0 0 1-.44-1.17 22 22 0 0 1-.14-2.74v-23.8a17.65 17.65 \n      0 0 1 2.35.23 6.93 6.93 0 0 1 2.75 1 6 6 0 0 1 2 2.15 14.4 14.4 0 0 1 1.4 4.26l.21 1h3.6zM378.58 49.35a6.06 6.06 0 0 1-2.65-.63 3 3 0 0 1-1.55-1.72l-11.85-32.16-8.93 2.64 1.27 3.39-9.64 22.47a25.33 25.33 0 0 1-1.4 3.12v.1c-.15.28-.31.55-.47.79a4.19 4.19 0 0 1-.72.94 2.41 2.41 0 0 1-.63.52l-.11.06a4.2 4.2 0 0 1-1.37.53 2.6 2.6 0 0 1-.59.08h-.5v3.74h13.68v-3.69a6.9 6.9 0 0 1-3.08-1c-1.1-.69-.35-2.36-.23-2.61l.05-.11 1.88-5.13h10.4l1.29 3.63v.12c.07.17.33.81.56 1.53a2.47 2.47 0 0 0 .1.29v.06c0 .06.09.29.12.44a3.46 3.46 0 0 1 .15.9.92.92 0 0 1-.08.4.7.7 0 0 1-.14.21 2.58 2.58 0 0 1-1.21.75l-.3.09a10.92 10.92 0 0 1-2.64.3v3.76h18.88v-3.81zm-25.19-13.19l3.61-9.83 3.48 9.83zM341.72 15.92h-32.83l-.66 13.57H312l.2-1a14.38 14.38 0 0 1 1.41-4.26 5.79 5.79 0 0 1 2-2.15 6.88 6.88 0 0 1 2.75-1 17.32 17.32 0 0 1 2.35-.23v23.8a20 20 0 0 1-.15 2.74 2.26 2.26 0 0 1-.44 1.16 2.19 2.19 0 0 1-1.09.59 16.73 16.73 0 0 1-2.92.43l-1.29.1v3.53H336v-3.54l-1.29-.1a16.73 16.73 0 0 1-2.92-.43 2.19 2.19 0 0 1-1.09-.59 2.26 2.26 0 0 1-.44-1.16 20.25 20.25 0 0 1-.14-2.74v-23.8a17.16 17.16 0 0 1 2.34.23 6.92 6.92 0 0 1 2.76 1 6 6 0 0 1 2 2.15 14.7 14.7 0 0 1 1.4 4.26l.21 1h3.59zM443.34 39.54v.05c-.57 1.55-2.28 5.29-4.64 6.65-2.81 1.62-6.16 2.95-12.81 2.15V36.28h1.07a6.73 6.73 0 0 1 6.68 5.89H437V26.6h-3.44a6.72 6.72 0 0 1-5.34 5.4 4.61 4.61 0 0 1-.69.12H425.87V20.5h3.92c1 0 4.59-.1 7 1.52 2.75 1.87 3.58 5.26 3.84 6.7l3.48-.63-.51-12.17h-32.8v4l1.2.08a8.27 8.27 0 0 1 2.46.36 2.5 2.5 0 0 1 1.09.72 2.78 2.78 0 0 1 .5 1.26 14.83 14.83 0 0 1 .16 2.36v20a15.62 15.62 0 0 1-.16 2.47 2.49 2.49 0 0 1-.49 1.21 2.12 2.12 0 0 1-1.05.64 10.46 10.46 0 0 1-2.55.39l-1.21.07v3.79h32.8l2.82-11.54zM21.16 98.05c-2.09 5.85-8.68 6.24-10.1 6.24-1.1 0-5.28-.18-8.12-3C.53 98.87.46 95.78.46 92.66v-14h6.31v15.63c0 2.24.18 3.09 1.17 3.87a5.6 5.6 0 0 0 3.33 1 4.35 4.35 0 0 0 3.09-.93c1.17-1 1.2-2.51 1.2-3.93V78.7h6.28v14a16.23 16.23 0 0 1-.68 5.35zM67.07 103.72L58 88.23l.22 15.49h-6v-25h6.13l9.15 15.7-.25-15.7h6v25zM103.72 103.72v-25H110v25zM153.07 103.72h-6.38l-8.58-25h6.66L150 96.49l5.14-17.79h6.66zM189.9 103.72v-25h18.5v4.82h-12.26v4.57h11.45v4.75h-11.45v6h13.4v4.92zM253.67 103.72l-5-8.93h-3.89v8.93h-6.31v-25h13.39c1.14.07 5.11.32 7.06 3.9a9.06 9.06 0 0 1 1 4.18 6.6 6.6 0 0 1-3.12 6 15.37 15.37 0 0 1-2 .89l5.78 10zm-3.61-20.38h-5.32v6.81h5.17a5.09 5.09 0 0 0 1.67-.25 3.14 3.14 0 0 0 2.09-3.23c0-3.26-2.51-3.33-3.61-3.33zM309 99.5c-2.16 3.94-6.67 4.47-7.87 4.61a19 19 0 0 1-2.52.18 14.2 14.2 0 0 1-9.43-3 14.91 14.91 0 0 1-2-2.09l4.75-3a9.69 9.69 0 0 0 1.1 1.06 10.07 10.07 0 0 0 6.13 2.09 7.16 7.16 0 0 0 1.95-.24c.18 0 2.66-.75 2.66-2.66 0-2.31-3.33-2.38-5.57-2.7a31.29 31.29 0 0 1-3.54-.63A8.55 8.55 0 0 1 290 90.5a5.79 5.79 0 0 1-1.06-1.84 7.68 7.68 0 0 1-.32-2.2 16.25 16.25 0 0 1 .14-1.74 6.91 6.91 0 0 1 2.17-4c1.24-1.17 3.68-2.63 7.79-2.63a14.5 14.5 0 0 1 8.28 2.49 23.68 23.68 0 0 1 2.77 2.23l-4.61 3.29a9.58 9.58 0 0 0-4.22-2.72 9.78 9.78 0 0 0-2.34-.36c-2.55 0-3.72 1.49-3.72 2.66a1.87 1.87 0 0 0 .53 1.31c.85.92 2.23.89 4.57 1.24 1.42.22 2.8.5 4.19.82.88.18 4.11.81 5.38 3.86a7.43 7.43 0 0 1 .5 2.7A8 8 0 0 1 309 99.5zM339.35 103.72v-25h6.24v25zM386.86 83.63v20.09h-6.31V83.63H374V78.7h19.32v4.93zM435 91.88v11.84h-6.17V92.06l-9.36-13.36h7.16l5.37 8.47 5.35-8.47h7.12z\"/>\n      </svg>\n    </a>\n    </div>\n  </div>\n  );\n\n}\n\n\nfunction District(props){\n  return(\n    <button className=\"district\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\n/***\n * This class controls everything with the functionality\n * \n */\nclass MasterClassWeatherComponent extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = \"\";\n    this.grainDistricts = [\"District1\", \"District2\", \"District3\", \"Distrinct4\", \"District5\", \"District6\", \"District7\", \"District8\", \"District9\"];\n\n\n  }\n}\n\nclass MapOfKansasClass extends React.Component{\n  renderDistrict(i){\n    return(\n      <District\n        value={this.props.grainDistricts[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render(){\n    return (\"\");\n    /*\n    return (\n      <!svg id=\"Kansas\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"5950\" height=\"4250\" viewBox=\"0 0 5950 4250\"></svg>\n      <g id=\"District9\">\n        {this.renderDistrict(0)}\n        <image id=\"Border\" x=\"3745\" y=\"2375\" width=\"1670\" height=\"943\" xlink:href=\"data:img/png;base64,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\"/>\n        <image id=\"Station\" x=\"4972\" y=\"3011\" width=\"43\" height=\"44\" xlink:href=\"data:img/png;base64,iVBORw0KGgoAAAANSUhEUgAAACsAAAAsCAYAAAD8WEF4AAADsUlEQVRYhc2ZyY8MYRiHn6puYywzY401iEE42GJNiJvg5CTEwcnBwT/jJBws4eREEA4ilthjgljGLkQYjN0w09PV8o7fN/nU9Cw13T1dv6TSqa6emqfe7/3erQLKJ3evECjowPssWaXA2t9mgVpgNFCvz5G61gn8Bn4C34BfQLu+H/Q/TKqMoCYD84EFwBxgooBrdN8I6BDoe+AJ8Ah4DHzQg0SVgjXIOsGtBVYDs4HxwBhZOKN7Bp4rOAt/AT4CT4ErwFXgmSw+IFcZKOwIoBHYAGySJScJMIkKAn8LNAOngHPAGyCX8F5FH8asthE4CrzUTQslHrb8f4CHwF5gDTCqFNBQfrlTy/a9DJDxIw98As4CW2SYQVl0CrBbT99ZAVB3OCtfB7YnBQ60aXZp90YVBPWBLXLcALYlcQkLS5uBe0ME6gNbHL4ErAOG9QdqQX4ZcLLCS98XsCWRw8DceLTKxJbfAvsOYOsgwlI55LLiJG28+3KPHhquONpcBYvGDwO8Biz3rRt6xOME21gFi8aVVaZc7282B2sXZ+liNgWwgQoiS0ZTnXUdrKXTJUqjaVFWhdIiZ0AHa9XSiiptqt4UKIyulDG7YEP56+IUgTplxWXVXheoha8JwIxU4P0vY5upjNptWVc4p02u6rOVD5xl6weS3qqgQJ2H8YWh90U5m8dyKdDK1zjLouyRRvmZrbttTty8DaEi8RVCVetfVJ6lTQUV5tYhR6HXWrSm1Kqt4uuybKQW+VkK4OLKa87wFflspJM7qcL8J+ukm4AfeLWBndxUB5sWmRE/A7fcfnKw7arKm1IE2ynQx3KHbthIU5Iz2n3VVkGrfFr7CWKdgl08r3a42upQl3vZD6l+wxhpSIY63LoqAduSvwD2ALf9EWkm9sOcIoMVvUuLXK+03PLvB44rGfQp63JXASeqMORoAw6qnelhqGKWy+uJPqoobxyCisylVbPmPuBBsQl5b8uc03T6HdCgzrdSLlHQFOa4xp9NvdUpfQHYjmwBXsnaUyuw6fKa+drs9wBwVxVWUfVnrQ69D3iugqJWo51SZwuRsuZF4BBwTMG/z8pvIEvbqbT3XC8xWuXDDdqMSSE/K5Yb4BHggtyt37c4STZOIMtO9oYPC4F56ozrBR9/D/ZbgK/1sPe03E+0iXPeb8sG6xSquazXdHw6ME0d8lg9kKuT21TYtyidv5Vb/UwCWQqsr4z8t0aQtTp3pacBWUiyw/zflnrQ7VO542ex+5WnGQX+Ap/+rrU2nUxqAAAAAElFTkSuQmCC\"/>\n      </g>\n    );\n*/\n  }\n}\n\nclass CurrentDataComponent extends React.Component{\n\n}\n\nclass HistoricalDataComponent extends React.Component{\n\n}\n\nfunction Main()\n{\n  return (\n   <Container>\n    \n    <Grid container spacing={3}>\n          <Grid item xs={12} md={12}>\n          <CardUIMap>\n\n          </CardUIMap>\n        </Grid> \n          <Grid item xs={12} md={7}>\n          <CardUI>\n\n          </CardUI>\n        </Grid>\n          <Grid item xs={12} md={5}>\n          <CardUI>\n\n          </CardUI>\n        </Grid>\n     </Grid>\n     \n   </Container>\n  );\n}\n\nfunction CardUIMap()\n{\n  return (\n    <Card>\n    <CardContent>\n     <Grid container spacing={0}>\n      <Grid xs={12} md={7}>\n      <MapKansas></MapKansas>\n      </Grid>\n       <Grid xs={12} md={5}>\n          <Grid container spacing={0}>\n          <Grid xs={12} style={{marginBottom: \"5px\"}}>\n              <CurrentWeatherCard>\n                Test\n              </CurrentWeatherCard>\n          </Grid>\n          <Grid xs={12}>\n              <CardStrap>\n              <CardStrap.Header>\n                Forcast\n              </CardStrap.Header>\n              <CardStrap.Body>\n              This is a test.\n              </CardStrap.Body>\n          \n            </CardStrap>\n          </Grid>\n          </Grid>\n      </Grid>\n          \n    </Grid>\n\n    </CardContent>\n   \n    <CardContent>\n    </CardContent>\n    <CardActions>\n    <Button size=\"small\" color=\"primary\">\n       Share\n     </Button>\n     <Button size=\"small\" color=\"primary\">\n       Learn More\n     </Button>\n   </CardActions>   \n   </Card>\n  );\n}\n\n\nfunction CurrentWeatherCard()\n{\n    return (\n       <CardStrap>\n         <CardStrap.Body>\n            <CurrentWeatherComponent/>\n         </CardStrap.Body>\n        \n       </CardStrap>\n    \n    \n    );\n}\n\nfunction CardUI()\n{\n  return (\n    <Card>\n       <CardHeader>\n         <h4>This is a test</h4>\n       </CardHeader>\n       <CardContent>\n        \n         \n          \n       </CardContent>\n       <CardContent>\n       </CardContent>\n       <CardActions>\n         <ButtonStrap>\n           Stop\n         </ButtonStrap>\n       <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions>\n       \n      \n        \n      </Card>\n  );\n}\n\nfunction getLocation() {\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n         alert(\"Geolocation is not supported by this browser.\");\n    }\n}\n\nfunction showPosition(position) {\n    alert(\"Latitude: \" + position.coords.latitude +\n    \"<br>Longitude: \" + position.coords.longitude);\n}\n\n\nfunction MapKansas()\n{\n  return(\n  <div>\n    <Container>\n      <object id=\"svg-object\" data={kansas} className=\"App-logo\" alt=\"logo\" style={{width:\"100%\", height:\"auto\"}}/>\n    </Container>\n\n  </div>\n  );\n}\n\nfunction MapOfKansas()\n{\n  return (\n    <div >\n      <Container>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"500.000000pt\" height=\"340.000000pt\" viewBox=\"0 0 300.000000 240.000000\" preserveAspectRatio=\"xMidYMid meet\">\n          <g transform=\"translate(0.000000,240.000000) scale(0.100000,-0.100000)\" fill=\"#03AB03\" stroke=\"none\">\n      <path class=\"node\" id=\"node1\" d=\"M140 1200 l0 -710 1358 2 1357 3 0 510 0 510 -32 3 c-33 3 -74 45 -66 67 2 6 -13 26 -32 45 -19 19 -35 40 -35 48 0 27 41 82 61 82 24 0 24 1 -1 56 -20 43 -44 57 -52 32 -5 -15 -68 15 -95 45 -15 16 -87 17 -1240 17 l-1223 0 0 -710z\" transform=\"scale(1) translate(-15,0) rotate(0 218.3666564941406,178)\" \n        style={{position:\"relative\", fill: \"rgb(255, 255, 255)\", stroke: \"rgb(8, 8, 8)\"}} fill=\"#ffffff\" stroke=\"#080808\"/>\n      </g>\n      <g transform=\"translate(0.000000,240.000000) scale(0.100000,-0.100000)\" fill=\"#FFFFFF\" stroke=\"none\">\n\n      </g>\n      </svg>\n      </Container>  \n    </div>\n  );\n}\n\nclass CurrentWeatherComponent extends React.Component {\n \n  constructor(props) {\n    super(props);\n    this.date = new Date();\n    this.year = this.date.getFullYear();\n\n    var month = (this.date.getMonth()+1);\n    \n    this.month = month < 10 ? \"0\" + month : month;\n\n\n    var day = this.date.getDay();\n    console.log(day);\n\n    this.day = day < 10 ? \"0\" + day : day;\n\n    var hours = this.date.getHours();\n    this.hours = hours < 10 ? \"0\" + hours : hours;\n\n    var minutes = this.date.getMinutes();\n    this.minutes = minutes < 10 ? \"0\" + minutes : minutes;\n\n    var seconds = this.date.getSeconds();\n    this.seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    \n    this.dateString =  this.year+this.month+this.day+this.hours+this.minutes+this.seconds;\n\n    console.log(this.year);\n    console.log(this.month);\n    console.log(this.day);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://mesonet.k-state.edu/rest/stationdata/?stn=Manhattan&int=day&t_start=20190917000000&t_end=20190917000000&vars=TEMP2MAVG\")\n      .then(res => res.text())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  getDayIndicator(hour, min)\n  {\n    if(hour >= 0 && hour <= 5)\n    {\n      return \"Early Morning\";\n    }\n    else if(hour >= 6 && hour <= 11)\n    {\n      return \"Morning\";\n    }else if(hour >= 12 && hour <= 17)\n    {\n      return \"Afternoon\";\n    }else if(hour >= 18 && hour <= 23)\n    {\n      return \"Night\";\n    }\n  }\n\n  get12HourTimes(h,m)\n  {\n    var hours = h > 12 ? h - 12 : h;\n    var am_pm = h >= 12 ? \"PM\" : \"AM\";\n    //hours = hours < 10 ? \"0\" + hours : hours;\n    var minutes = m < 10 ? \"0\" + m : m;\n    return hours + \":\" + minutes +\" \"+am_pm;\n  }\n\n  getCurrentTemperature(s)\n  {\n    var strArr = s.split('\\n');\n    var tempLine = strArr[1];\n\n    var tempArr = tempLine.split(',');\n    var tempCels = parseFloat(tempArr[2]);\n\n    return Math.trunc(tempCels * (9/5) + 32);\n\n  }\n\n  render() {\n    var hour = this.date.getHours();\n    var minutes = this.date.getMinutes();\n    var seconds = this.date.getSeconds();\n    var time =  hour + \":\" + minutes;\n    var meridiem = \"\";\n    var descriptionOfDay = this.getDayIndicator(hour,minutes);\n    var twelveHourTime = this.get12HourTimes(hour, minutes);\n   \n\n\n    const { error, isLoaded, items } = this.state;\n    \n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div><img src={loader} class=\"img-fluid\" /></div>;\n    } else {\n      var temperature = this.getCurrentTemperature(items);\n      console.log(items);\n      return (\n        <div class=\"info\">\n\t\t\t\t\t\t\t\t<div class=\"city\"><span>City:</span> Manhattan</div>\n\t\t\t\t\t\t\t\t<div class=\"night\">{descriptionOfDay} - {twelveHourTime}</div>\n                <div class=\"temp\">{temperature}° F</div>\n\n                <div class=\"wind\">\n\t\t\t\t\t\t\t\t\t<svg version=\"1.1\" id=\"wind\" xmlns=\"http://www.w3.org/2000/svg\" xlinkHref=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t\t\t\t\t\t\t\t\t\t viewBox=\"0 0 300.492 300.492\" style={{background: \"0 0 300.492 300.492\"}} space=\"preserve\">\n\t\t\t\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t\t\t\t\t\t<path style={{fill:\"#FFFFFF\"}} d=\"M287.166,100.421c-9.502-13.217-24.046-23.034-39.868-26.945\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-5.309-1.365-10.845-2.061-16.453-2.061c-11.531,0-22.257,3.035-30.981,8.746c-14.076,8.86-23.709,23.91-25.759,40.157\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-2.698,16.644,4.357,34.315,17.519,43.959c7.555,5.716,17.47,8.991,27.201,8.991c7.332,0,14.109-1.811,19.575-5.216\n\t\t\t\t\t\t\t\t\t\t\t\t\tc14.936-8.991,21.495-28.577,14.626-43.665c-3.525-7.669-10.427-13.647-18.455-15.975c-2.361-0.696-4.754-1.082-7.131-1.164\n\t\t\t\t\t\t\t\t\t\t\t\t\tl-0.288,5.434c1.974,0.141,3.916,0.544,5.782,1.202c6.288,2.143,11.536,7.093,14.044,13.288c1.256,2.975,1.893,6.211,1.822,9.355\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.071,3.421-0.658,6.565-1.855,9.861c-2.366,6.222-6.967,11.667-12.678,14.968c-10.269,6.233-26.624,4.329-37.171-4.172\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-10.405-8.278-15.529-21.87-13.364-35.528c1.8-13.413,9.85-25.71,21.56-32.912c5.553-3.514,12.069-5.803,18.868-6.636\n\t\t\t\t\t\t\t\t\t\t\t\t\tc2.823-0.359,6.619-0.413,10.285-0.131c3.497,0.31,7.033,0.903,10.231,1.713c13.358,3.437,25.623,11.863,33.668,23.154\n\t\t\t\t\t\t\t\t\t\t\t\t\tc8.365,11.324,12.325,24.96,11.438,39.477c-0.587,14.098-5.423,28.305-13.619,40.021c-8.159,11.759-19.907,21.354-33.108,27.027\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-6.059,2.654-13.07,4.574-20.832,5.695c-4.803,0.68-9.959,0.8-16.203,0.892l-176.09,2.339l-29.817,1.164l0.109,5.439\n\t\t\t\t\t\t\t\t\t\t\t\t\tl199.015,0.131c2.295,0,4.596,0,6.88,0.022l4.253,0.027c3.835,0,8.376-0.071,12.988-0.593c8.36-1.033,16.263-3.111,23.464-6.168\n\t\t\t\t\t\t\t\t\t\t\t\t\tc14.925-6.206,28.283-16.905,37.606-30.127c9.426-13.206,15.072-29.36,15.893-45.438\n\t\t\t\t\t\t\t\t\t\t\t\t\tC301.476,130.293,296.679,113.399,287.166,100.421z\"/>\n\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t\t\t\t\t\t<path style={{fill:\"#FFFFFF\"}} d=\"M106.617,209.839c0.664-0.027,1.463-0.038,2.23-0.038l5.445,0.065\n\t\t\t\t\t\t\t\t\t\t\t\t\tc1.528,0.027,2.959,0.049,4.395,0.049c2.801,0,6.511-0.076,10.438-0.647c7.626-1.246,14.849-4.471,20.864-9.312\n\t\t\t\t\t\t\t\t\t\t\t\t\tc12.374-9.752,18.874-25.999,16.562-41.391c-2.371-15.648-15.953-28.697-31.547-30.35c-8.539-1.05-16.421,0.979-22.404,5.619\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-6.451,4.824-10.688,12.091-11.612,19.842c-1.229,8.077,1.806,16.589,7.664,21.637c5.803,5.287,15.431,7.43,22.387,5.037\n\t\t\t\t\t\t\t\t\t\t\t\t\tc5.102-1.702,9.42-5.798,11.563-10.971l-4.928-2.284c-1.817,3.519-5.096,6.124-8.762,6.957c-1.218,0.277-2.317,0.408-3.367,0.408\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-4.329,0-8.762-1.866-11.591-4.89c-3.835-4.003-5.249-9.11-4.096-14.762c1.044-5.08,4.308-10.106,8.496-13.124\n\t\t\t\t\t\t\t\t\t\t\t\t\tc4.449-3.176,9.284-4.286,15.349-3.405c11.123,1.441,20.603,10.943,22.077,22.229c1.996,11.335-2.877,24.013-12.173,31.585\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-4.585,3.867-10.193,6.494-16.236,7.604c-2.469,0.479-4.922,0.571-7.647,0.642l-104.506,2.752\n\t\t\t\t\t\t\t\t\t\t\t\t\tC10.264,203.524,5.134,203.9,0,204.275l0.19,5.434L106.617,209.839z\"/>\n\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t</g>\n                 \n                  </svg>\n\t\t\t\t\t\t\t\t\t<span>25 km/h</span>\n                \n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n          </div>\n      );\n    }\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}