{"ast":null,"code":"var _jsxFileName = \"/Users/sriegodedios/Development/climate-application/src/PercipitationGraph.js\";\nimport React, { Component } from 'react';\nimport '../node_modules/react-vis/dist/style.css';\nimport { XYPlot, LineSeries, VerticalGridLines, HorizontalGridLines, XAxis, YAxis } from 'react-vis';\nimport { makeWidthFlexible } from 'react-vis';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport { purple } from '@material-ui/core/colors';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport continuousColorLegend from 'react-vis/dist/legends/continuous-color-legend';\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: purple[300],\n    '&$checked': {\n      color: purple[500]\n    },\n    '&$checked + $track': {\n      backgroundColor: purple[500]\n    }\n  },\n  checked: {},\n  track: {}\n})(Switch);\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n    }\n  }\n}))(InputBase);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\nexport default class PercipitationGraph extends Component {\n  constructor(props) {\n    super(props);\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n    var yyyy = today.getFullYear();\n    today = mm + '-' + dd + '-' + yyyy;\n    this.state = {\n      selectedTypeFrequency: \"Weekly\",\n      selectedGraphType: false,\n      selectedStartDate: today,\n      selectedEndDate: today,\n      isValidStartDate: true,\n      error: null,\n      isLoaded: false,\n      data: [],\n      items: {}\n    };\n    this.handleChangeFrequency = this.handleChangeFrequency.bind(this);\n    this.handleChangeGraphType = this.handleChangeGraphType.bind(this);\n    this.handleChangeStartDate = this.handleChangeStartDate.bind(this);\n    this.handleChangeEndDate = this.handleChangeEndDate.bind(this);\n  } //StnData\n  //StnMeta\n  //GridData\n  //MultiStnData\n\n\n  componentWillReceiveProps(newProps) {\n    console.log(\"GO!\");\n  }\n\n  componentWillMount() {}\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    /*var jsonData;\n    \n    console.log(\"GO! UPDATED COMPONENT\")\n      var queryData = \"http://data.rcc-acis.org/StnData?sid=144972&sdate=2019-10-01&edate=2019-10-30&elems=maxt&output=json\"\n    fetch(queryData)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          isLoaded: true,\n          items: result.data\n        });       \n    })\n       //get the data of the item\n    // var jsonData = this.state.items.data\n     console.log(this.state.items)*/\n    // console.log(\"Result:\" +this.state.items)\n  }\n\n  handleChangeFrequency(item) {\n    console.log(item);\n    this.setState({\n      selectedTypeFrequency: item.target.value\n    });\n  }\n\n  handleChangeGraphType(item) {\n    console.log(item.target.checked);\n    this.setState({\n      selectedGraphType: item.target.checked\n    });\n  }\n\n  handleChangeStartDateEvent(item) {\n    var date = new Date(item);\n    var dd = String(date.getDate()).padStart(2, '0');\n    var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n    var yyyy = date.getFullYear();\n    var realDate = mm + '-' + dd + '-' + yyyy;\n    this.setState({\n      selectedStartDate: date\n    });\n  }\n\n  checkThisStartDate(date) {\n    // this.state\n    date = new Date(date);\n    date.setHours(0, 0, 0, 0);\n    var today = new Date();\n    today.setHours(0, 0, 0, 0);\n    var currentSelected = new Date(this.state);\n    currentSelected.setHours(0, 0, 0, 0);\n\n    if (date > today) {\n      return false;\n    } else if (date > currentSelected) {\n      return false;\n    }\n\n    return true;\n  }\n\n  checkThisEndDate(date) {\n    date = new Date(date);\n    date.setHours(0, 0, 0, 0);\n    var today = new Date();\n    today.setHours(0, 0, 0, 0);\n    var currentStartSelected = new Date(this.state.selectedStartDate);\n    currentStartSelected.setHours(0, 0, 0, 0);\n\n    if (date > today) {\n      return false;\n    } else if (date < currentStartSelected) {\n      return false;\n    }\n\n    return true;\n  }\n\n  handleChangeStartDate(item) {\n    var date = new Date(item);\n    var dd = String(date.getDate()).padStart(2, '0');\n    var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n    var yyyy = date.getFullYear();\n    var dateA = mm + '-' + dd + '-' + yyyy; //  alert(this.state.selectedStartDate);\n\n    var today = new Date();\n    today.setHours(0, 0, 0, 0);\n    var currentSelected = new Date(this.state.selectedEndDate);\n    currentSelected.setHours(0, 0, 0, 0);\n    var error = \"test\";\n\n    if (date > today) {\n      this.setState({\n        isValidStartDate: false\n      });\n      alert(\"The start date exceed today's this is not allowed. =(\");\n      return;\n    } else if (date > currentSelected) {\n      this.setState({\n        isValidStartDate: false\n      });\n      alert(error);\n      ;\n      return;\n    }\n\n    this.setState({\n      isValidStartDate: true\n    });\n    this.setState({\n      selectedStartDate: dateA\n    }); //\n  }\n\n  handleChangeEndDate(item) {\n    var date = new Date(item);\n    var dd = String(date.getDate()).padStart(2, '0');\n    var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n    var yyyy = date.getFullYear();\n    date = mm + '-' + dd + '-' + yyyy;\n    console.log(date);\n    this.setState({\n      selectedEndDate: date\n    });\n  }\n\n  renderGraph() {}\n\n  render() {\n    if (!this.props.selectedDistrict) {\n      return \"\";\n    }\n\n    const data = [{\n      x: 0,\n      y: 8\n    }, {\n      x: 1,\n      y: 5\n    }, {\n      x: 2,\n      y: 4\n    }, {\n      x: 3,\n      y: 9\n    }, {\n      x: 4,\n      y: 1\n    }, {\n      x: 5,\n      y: 7\n    }, {\n      x: 6,\n      y: 6\n    }, {\n      x: 7,\n      y: 3\n    }, {\n      x: 8,\n      y: 2\n    }, {\n      x: 9,\n      y: 0\n    }, {\n      x: 10,\n      y: 4\n    }];\n    console.log(\"type: \" + this.state.selectedTypeFrequency);\n    return React.createElement(\"div\", {\n      className: \"Graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      component: \"label\",\n      container: true,\n      alignItems: \"center\",\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Temperature\"), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(PurpleSwitch, {\n      checked: this.state.selectedGraphType,\n      onChange: this.handleChangeGraphType,\n      value: this.state.selectedGraphType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"Perciptiation\")))), React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"age-customized-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"Frequency\"), React.createElement(Select, {\n      value: this.state.selectedTypeFrequency,\n      onChange: this.handleChangeFrequency,\n      input: React.createElement(BootstrapInput, {\n        name: \"age\",\n        id: \"age-customized-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"Weekly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, \"Weekly\"), React.createElement(MenuItem, {\n      value: \"Monthly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Monthly\"), React.createElement(MenuItem, {\n      value: \"Yearly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, \"Yearly\"))), React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(KeyboardDatePicker, {\n      disableToolbar: true,\n      variant: \"inline\",\n      format: \"MM-dd-yyyy\",\n      margin: \"normal\",\n      id: \"date-picker-inline\",\n      label: \"Start Date\",\n      value: this.state.selectedStartDate,\n      onChange: this.handleChangeStartDate,\n      KeyboardButtonProps: {\n        'aria-label': 'change date'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }), React.createElement(KeyboardDatePicker, {\n      disableToolbar: true,\n      variant: \"inline\",\n      format: \"MM-dd-yyyy\",\n      margin: \"normal\",\n      id: \"date-picker-inline\",\n      label: \"End Date\",\n      value: this.state.selectedEndDate,\n      onChange: this.handleChangeEndDate,\n      KeyboardButtonProps: {\n        'aria-label': 'change date'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }))))), React.createElement(XYPlot, {\n      height: 300,\n      width: 1000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(VerticalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }), React.createElement(HorizontalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }), React.createElement(LineSeries, {\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/sriegodedios/Development/climate-application/src/PercipitationGraph.js"],"names":["React","Component","XYPlot","LineSeries","VerticalGridLines","HorizontalGridLines","XAxis","YAxis","makeWidthFlexible","makeStyles","withStyles","InputLabel","MenuItem","FormControl","Select","NativeSelect","InputBase","purple","Switch","FormGroup","FormControlLabel","Grid","Typography","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","continuousColorLegend","PurpleSwitch","switchBase","color","backgroundColor","checked","track","BootstrapInput","theme","root","marginTop","spacing","input","borderRadius","position","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","useStyles","display","flexWrap","margin","PercipitationGraph","constructor","props","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","state","selectedTypeFrequency","selectedGraphType","selectedStartDate","selectedEndDate","isValidStartDate","error","isLoaded","data","items","handleChangeFrequency","bind","handleChangeGraphType","handleChangeStartDate","handleChangeEndDate","componentWillReceiveProps","newProps","console","log","componentWillMount","componentDidUpdate","prevProps","prevState","snapshot","item","setState","target","value","handleChangeStartDateEvent","date","realDate","checkThisStartDate","setHours","currentSelected","checkThisEndDate","currentStartSelected","dateA","alert","renderGraph","render","selectedDistrict","x","y"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport '../node_modules/react-vis/dist/style.css';\nimport {XYPlot, LineSeries, VerticalGridLines, HorizontalGridLines, XAxis, YAxis} from 'react-vis';\nimport {\n  makeWidthFlexible,\n} from 'react-vis';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport { purple } from '@material-ui/core/colors';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport continuousColorLegend from 'react-vis/dist/legends/continuous-color-legend';\n\n\n\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: purple[300],\n    '&$checked': {\n      color: purple[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: purple[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\n\n\n\n\n\n\n\n\n\n\n\nexport default class PercipitationGraph extends Component{\n    constructor(props)\n    {\n      super(props);\n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, '0');\n      var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n      var yyyy = today.getFullYear();\n\n      \n      today = mm + '-' + dd + '-' + yyyy;\n\n      this.state = {\n        selectedTypeFrequency: \"Weekly\",\n        selectedGraphType: false,\n        selectedStartDate: today,\n        selectedEndDate: today,\n        isValidStartDate: true,\n        error: null,\n        isLoaded: false,\n        data: [],\n        items:{}\n      }\n      \n\n      this.handleChangeFrequency = this.handleChangeFrequency.bind(this);\n      this.handleChangeGraphType = this.handleChangeGraphType.bind(this);\n      this.handleChangeStartDate = this.handleChangeStartDate.bind(this);\n      this.handleChangeEndDate = this.handleChangeEndDate.bind(this);\n    }\n\n    //StnData\n    //StnMeta\n    //GridData\n    //MultiStnData\n\n    componentWillReceiveProps(newProps) {\n      console.log(\"GO!\")\n    }\n\n    componentWillMount()\n    {\n      \n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot)\n    {\n\n      /*var jsonData;\n      \n      console.log(\"GO! UPDATED COMPONENT\")\n\n\n      var queryData = \"http://data.rcc-acis.org/StnData?sid=144972&sdate=2019-10-01&edate=2019-10-30&elems=maxt&output=json\"\n      fetch(queryData)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.data\n          });       \n      })\n\n        //get the data of the item\n     // var jsonData = this.state.items.data\n\n      console.log(this.state.items)*/\n\n     \n\n  \n     // console.log(\"Result:\" +this.state.items)\n\n      \n     \n    }\n\n    handleChangeFrequency(item)\n    {\n      console.log(item)\n      this.setState({selectedTypeFrequency: item.target.value});\n    }\n\n    handleChangeGraphType(item)\n    {\n      console.log(item.target.checked);\n      this.setState({selectedGraphType: item.target.checked});\n    }\n\n    handleChangeStartDateEvent(item)\n    {\n      var date = new Date(item);\n      var dd = String(date.getDate()).padStart(2, '0');\n      var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\n      var yyyy = date.getFullYear();\n      var realDate = mm + '-' + dd + '-' + yyyy;\n      this.setState({selectedStartDate: date });    \n    }\n\n    checkThisStartDate(date)\n    {\n\n     // this.state\n\n      date = new Date(date);\n      date.setHours(0,0,0,0);\n\n      var today = new Date();\n      today.setHours(0,0,0,0)\n\n      var currentSelected = new Date(this.state);\n      currentSelected.setHours(0,0,0,0);\n\n      if(date > today)\n      {\n        return false;\n      }\n      else if(date > currentSelected)\n      {\n        return false;\n      }\n\n      return true;\n    }\n\n    checkThisEndDate(date)\n    {\n      date = new Date(date);\n      date.setHours(0,0,0,0);\n\n      var today = new Date();\n      today.setHours(0,0,0,0)\n\n      var currentStartSelected = new Date(this.state.selectedStartDate);\n      currentStartSelected.setHours(0,0,0,0);\n\n      if(date > today)\n      {\n        return false;\n      }else if(date < currentStartSelected)\n      {\n        return false;\n      }\n\n      return true;\n    }\n\n    handleChangeStartDate(item)\n    {\n      var date = new Date(item);\n      var dd = String(date.getDate()).padStart(2, '0');\n      var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\n      var yyyy = date.getFullYear();\n\n      \n      var dateA = mm + '-' + dd + '-' + yyyy;\n     //  alert(this.state.selectedStartDate);\n\n      var today = new Date();\n      today.setHours(0,0,0,0)\n\n      var currentSelected = new Date(this.state.selectedEndDate);\n      currentSelected.setHours(0,0,0,0);\n\n      var error = \"test\";\n\n      if(date > today)\n      {\n        this.setState({isValidStartDate: false });\n        alert(\"The start date exceed today's this is not allowed. =(\");\n        return;\n      }\n      else if(date > currentSelected)\n      {\n        this.setState({isValidStartDate: false });\n        alert(error);;\n        return;\n      }\n\n      this.setState({isValidStartDate: true });\n      this.setState({selectedStartDate: dateA })//\n    }\n\n    handleChangeEndDate(item)\n    {\n      var date = new Date(item);\n      var dd = String(date.getDate()).padStart(2, '0');\n      var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\n      var yyyy = date.getFullYear();\n\n      \n      date = mm + '-' + dd + '-' + yyyy;\n      console.log(date)\n\n      this.setState({selectedEndDate: date})\n    }\n\n    renderGraph()\n    {\n\n\n    }\n  \n  \n    render()\n    {\n        \n        if(!this.props.selectedDistrict)\n        {\n            return \"\";\n        }\n\n        \n\n        const data = [\n            {x: 0, y: 8},\n            {x: 1, y: 5},\n            {x: 2, y: 4},\n            {x: 3, y: 9},\n            {x: 4, y: 1},\n            {x: 5, y: 7},\n            {x: 6, y: 6},\n            {x: 7, y: 3},\n            {x: 8, y: 2},\n            {x: 9, y: 0},\n            {x: 10, y: 4}\n\n          ];\n\n          console.log(\"type: \"+this.state.selectedTypeFrequency)\n          return (\n            <div className=\"Graph\">\n              <form autoComplete=\"off\">\n              <FormGroup>\n                    <Typography component=\"div\">\n                      <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n                      <Grid item>Temperature</Grid>\n                      <Grid item>\n                        <PurpleSwitch\n                          checked={this.state.selectedGraphType}\n                          onChange={this.handleChangeGraphType}\n                          value={this.state.selectedGraphType}\n                        />\n                       </Grid>\n                       <Grid item>Perciptiation</Grid>\n                       </Grid>\n                    </Typography>     \n                </FormGroup>\n            <Grid>\n              <FormControl>\n                <InputLabel htmlFor=\"age-customized-select\">Frequency</InputLabel>\n                <Select\n                  value={this.state.selectedTypeFrequency}\n                  onChange={this.handleChangeFrequency}\n                  input={<BootstrapInput name=\"age\" id=\"age-customized-select\" />}\n                >\n                  <MenuItem value={\"Weekly\"}>Weekly</MenuItem>\n                  <MenuItem value={\"Monthly\"}>Monthly</MenuItem>\n                  <MenuItem value={\"Yearly\"}>Yearly</MenuItem>\n                  \n                </Select>\n              </FormControl>\n              \n\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid container justify=\"space-around\">\n                    <KeyboardDatePicker\n                      disableToolbar\n                      variant=\"inline\"\n                      format=\"MM-dd-yyyy\"\n                      margin=\"normal\"\n                      id=\"date-picker-inline\"\n                      label=\"Start Date\"\n                      value={this.state.selectedStartDate}\n                      onChange={this.handleChangeStartDate}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                    />\n                    <KeyboardDatePicker\n                      disableToolbar\n                      variant=\"inline\"\n                      format=\"MM-dd-yyyy\"\n                      margin=\"normal\"\n                      id=\"date-picker-inline\"\n                      label=\"End Date\"\n                      value={this.state.selectedEndDate}\n                      onChange={this.handleChangeEndDate}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                      />\n                   </Grid>\n                </MuiPickersUtilsProvider>\n              </Grid>\n              \n              </form>\n              \n        \n        \n              <XYPlot height={300} width= {1000}>\n                <VerticalGridLines />\n                <HorizontalGridLines />\n                <XAxis />\n                <YAxis />\n                <LineSeries data={data} />\n            </XYPlot>\n            </div>\n          );\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}